<?xml version="1.0"?>
<project name="${project.name}" default="assemble" xmlns:ivy="antlib:org.apache.ivy.ant" basedir=".">

	<property file="build.properties"/>

	<path id="classpath">
		<fileset dir=".">
			<include name="${dir.out}/*.jar"/>
			<include name="${dir.lib}/**/*.jar"/>
		</fileset>
	</path>

	<target name="resolve" description="Resolve and download dependencies">
		<ivy:retrieve pattern="${dir.lib}/[conf]/[artifact]-[revision].[ext]"/>
	</target>

	<target name="clean" description="Clean up workspace">
		<delete includeEmptyDirs="true">
			<fileset dir="${dir.dest}" includes="**/*"/>
			<fileset dir="${dir.out}" includes="**/*"/>
		</delete>
	</target>

	<target name="compile" description="Compile source code">
		<javac destdir="${dir.dest}">
			<src path="${dir.src}"/>
			<src path="${dir.test}"/>
			<classpath refid="classpath"/>
		</javac>
	</target>

	<target name="manifest" description="Create manifest file">
		<manifest file="${dir.out}/${project.manifestName}">
			<attribute name="Main-Class" value="${project.mainClass}"/>
			<attribute name="Specification-Title" value="${project.name}"/>
			<attribute name="Specification-Version" value="${project.version}"/>
			<attribute name="Specification-Vendor" value="${project.vendor}"/>
			<attribute name="Implementation-Title" value="${project.name}"/>
			<attribute name="Implementation-Version" value="${project.version}"/>
			<attribute name="Implementation-Vendor" value="${project.vendor}"/>
			<attribute name="Class-Path" value="."/>
		</manifest>
	</target>

	<target name="jar" depends="compile, manifest" description="Put the output to a jar archive">
		<jar destfile="${dir.out}/${project.name}-${project.version}.jar" manifest="${dir.out}/${project.manifestName}">
			<fileset dir="${dir.dest}" includes="**/*" excludes="**/*Test.class"/>
		</jar>
	</target>

	<target name="run" description="Run the application without assembling">
		<input message="Type command line arguments" addProperty="args"/>
		<java fork="true" classname="${project.mainClass}">
			<classpath refid="classpath"/>
			<arg line="${args}"/>
		</java>
	</target>

	<target name="test">
		<junit printsummary="on" haltonfailure="no">
			<classpath refid="classpath"/>
			<batchtest>
				<fileset dir="${dir.dest}">
					<include name="**/*Test*"/>
				</fileset>
			</batchtest>
			<formatter type="plain" usefile="false"/>
		</junit>
	</target>

	<target name="assemble" depends="jar" description="Make final actions. At this stage the application is ready to use">
		<echo file="${dir.out}/${project.name}.bat">
			@ECHO OFF
			IF "%JAVA_HOME%" == "" (
				ECHO Variable ^%JAVA_HOME^% is not defined on this computer or Java is not installed
			) ELSE IF EXIST "%JAVA_HOME%\bin\java.exe" (
				%JAVA_HOME%\bin\java.exe -jar %~dp0\b64-${project.version}.jar %*
			) ELSE (
				ECHO Java is not installed on this computer
			)
		</echo>
		<jar destfile="${dir.out}/${project.name}-${project.version}.jar" manifest="${dir.out}/${project.manifestName}">
			<fileset dir="${dir.dest}" includes="**/*" excludes="**/*Test.class"/>
			<zipgroupfileset dir="${dir.lib.default}" excludes="META-INF/*">
				<include name="*.jar"/>
			</zipgroupfileset>
		</jar>
		<delete file="${dir.out}/${project.manifestName}"/>
	</target>
</project>
